/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        TreeLinkNode levelHead = root;
        while (levelHead != null) {
            TreeLinkNode cur = levelHead;
            TreeLinkNode fake = new TreeLinkNode(0);
            TreeLinkNode pre = fake;
            while (cur != null) {
                if (cur.left != null) {
                    pre.next = cur.left;
                    pre = cur.left;
                }
                if (cur.right != null) {
                    pre.next = cur.right;
                    pre = cur.right;
                }
                cur = cur.next;
            }
            levelHead = fake.next;
        }
    }
}

//不是满二叉树的情况 对每一层需要一个fake fake.next为下一层的levelHead
//然后用pre指针 出现的结点 就用pre连住 递增pre  满二叉树的话 是固定的左连右 右连下一个的左
//而此题 是出现才连 用pre
