/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int res;
    int max;
    public int findBottomLeftValue(TreeNode root) {
        max = -1;
        dfs(root, 0);
        return res;
    }
    public void dfs(TreeNode root, int level) {
        if (root == null) {
            return;
        }
        if (level > max) {
            res = root.val;
            max = level;
        }
        dfs(root.left, level + 1);
        dfs(root.right, level + 1);
    }
}

//最下面一层最左边的 即dfs层序遍历 记录最大深度 只有当level>max 即开启新层的时候 更新res 和max
