/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int max, res;
    public int findBottomLeftValue(TreeNode root) {
        if (root == null) {
            return 0;
        }
        max = -1;
        res = root.val;
        byLevel(root, 0);
        return res;
        
    }
    public void byLevel(TreeNode root, int level) {
        if (root == null) {
            return;
        }
        if (level > max) {
            res = root.val;
            max = level;
        }
        byLevel(root.left, level + 1);
        byLevel(root.right, level + 1);
    }
}

//其实此题就是层序遍历 从左到右的情况下 在每个level  只会取第一个值
//所以 当level 大于max 更新res 和max  直到出现下一层 即level+1的数才会再次更新
