class Solution {
    public int calPoints(String[] ops) {
        Stack<Integer> stack = new Stack<>();
        for (String str : ops) {
            if (str.equals("C")) {
                stack.pop();
            } else if (str.equals("D")) {
                stack.push(stack.peek() * 2);
            } else if (str.equals("+")) {
                int first = stack.pop();
                int second = stack.peek();
                stack.push(first);
                stack.push(first + second);
            } else {
                stack.push(Integer.parseInt(str));
            }
        }
        int res = 0;
        while (!stack.isEmpty()) {
            res = res + stack.pop();
        }
        return res;
    }
}

//Amazon的题就是比G家简单。。 因为CD+都涉及对上一个数的操作 所以很容易想到用栈来做
//遇见C pop  遇见D peek*2 push  遇见+ 得到栈顶两个数  遇见数字 加进去即可
