class MyStack {
    Queue<Integer> q;
    /** Initialize your data structure here. */
    public MyStack() {
        q = new LinkedList<>();
    }
    
    /** Push element x onto stack. */
    public void push(int x) {
        q.add(x);
        for (int i = 0; i < q.size() - 1; i++) {
            q.add(q.poll());
        }
    }
    
    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
        return q.poll();
    }
    
    /** Get the top element. */
    public int top() {
        return q.peek();
    }
    
    /** Returns whether the stack is empty. */
    public boolean empty() {
        return q.isEmpty();
    }
}

//stack和queue的区别就是出入顺序  要实现stack 就需要做到后进先出 所以push元素时 需要保证下一个pop的是他
//即 加到队列的最前面 由于只有LinkedList实现了queue 不能做到add某数到某索引 （ArrayList可以)
//所以 每加入一个数 把其前面的所有数 出队再入队即可实现
