/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode fake = new ListNode(0);
        ListNode node = fake;
        while (l1 != null || l2 != null || carry != 0) {
            int sum = ((l1 == null) ? 0 : l1.val) + ((l2 == null) ? 0 : l2.val) + carry;
            int val = sum % 10;
            carry = sum / 10;
            node.next = new ListNode(val);
            node = node.next;
            l1 = (l1 == null) ? null : l1.next;
            l2 = (l2 == null) ? null : l2.next;
        }
        return fake.next;
    }
}

//思路很简单 这题已经让数字倒序表达了 方便我们从个位开始运算
//设置进位  然后挨个循环得到每个结点的值即可
