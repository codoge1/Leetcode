class Solution {
    public String[] findRestaurant(String[] list1, String[] list2) {
        Map<String, Integer> map = new HashMap<>();
        for (int i = 0; i < list1.length; i++) {
            map.put(list1[i], i);
        }
        int min = Integer.MAX_VALUE;
        Map<String, Integer> m = new HashMap<>();
        for (int i = 0; i < list2.length; i++) {
            if (map.containsKey(list2[i])) {
                m.put(list2[i], map.get(list2[i]) + i);
                min = Math.min(min, map.get(list2[i]) + i);
            }
        }
        List<String> temp = new ArrayList<>();
        for (String key : m.keySet()) {
            if (m.get(key) == min) {
                temp.add(key);
            }
        }
        String[] res = new String[temp.size()];
        for (int i = 0; i < res.length; i++) {
            res[i] = temp.get(i);
        }
        return res;
    }
}

//思路是容易的  对第一个list 用map存储每个饭店及索引
//对第二个 遍历 若饭店在map内 因为最终需要得到的是索引和最小的饭店 所以还需要一个map 记录共有的饭店 和其索引和
//
