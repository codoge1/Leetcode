class Solution {
    public int islandPerimeter(int[][] grid) {
        int grids = 0, neighbors = 0;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[0].length; j++) {
                if (grid[i][j] == 1) {
                    grids++;
                    if (j < grid[0].length - 1 && grid[i][j + 1] == 1) {
                        neighbors++;
                    }
                    if (i < grid.length - 1 && grid[i + 1][j] == 1) {
                        neighbors++;
                    }
                }
            }
        }
        return 4 * grids - 2 * neighbors;
    }
}

//观察可以知道 每个grid 提供四条边 但每出现一个连在一起的 会使原来减少两条边
//所以统计总grid数和neighbor数即可  统计neighbor时 避免重复 所以只判断右or下即可
