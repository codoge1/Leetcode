class Solution {
    public int findMaxLength(int[] nums) {
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        int zero = 0, one = 0, max = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                zero++;
            } else {
                one++;
            }
            if (map.containsKey(zero - one)) {
                max = Math.max(max, i - map.get(zero - one));
            } else {
                map.put(zero - one, i);
            }
        }
        return max;
    }
}

//fancy解法！ 思路是对任何一段0和1相等的区间  其开头和结尾的01差 是相等的！
//所以 设置map 记录每个01差首次出现的位置 然后遍历更新0和1的数 每次更新后 判断map中是否存在当前01差 若存在
//则从i 到首次01差位置的区间 是01相等的区间！ 更新max
//若不存在 则记录当前01差及其位置
