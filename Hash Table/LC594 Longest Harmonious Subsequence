class Solution {
    public int findLHS(int[] nums) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int n : nums) {
            map.put(n, map.getOrDefault(n, 0) + 1);
        }
        int max = 0;
        for (int key : map.keySet()) {
            if (map.containsKey(key + 1)) {
                max = Math.max(max, map.get(key) + map.get(key + 1));
            }
        }
        return max;
    }
}

//此题重点是子序列 可以任意跳过不需要的值 所以最好的方法即
//map统计所有数及次数 然后对所有数遍历 若存在其+1 则key 和key+1可以构成一条harmonious 长度即为两者数量和
//不需要考虑key-1  因为若有key-1 其会与key进行计算~
