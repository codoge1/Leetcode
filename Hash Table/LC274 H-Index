class Solution {
    public int hIndex(int[] citations) {
        int len = citations.length;
        int[] buckets = new int[len + 1];
        for (int c : citations) {
            if (c >= len) {
                buckets[len]++;
            } else {
                buckets[c]++;
            }
        }
        int count = 0;
        for (int i = buckets.length - 1; i >= 0; i--) {
            count = count + buckets[i];
            if (count >= i) {
                return i;
            }
        }
        return 0;
    }
}

//桶排序最快 设置len+1个桶 每个桶的索引代表引论数 因为h-index最多为len 所以 大于等于len的引论数 都算作len
//然后从后遍历 设置计数count  每次加上一个桶的数量 若count>=i 则i为最大的h index
