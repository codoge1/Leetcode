class Solution {
    public int leastBricks(List<List<Integer>> wall) {
        Map<Integer, Integer> map = new HashMap<>();
        int max = 0;
        for (int i = 0; i < wall.size(); i++) {
            List<Integer> row = wall.get(i);
            int loc = 0;
            for (int j = 0; j < row.size() - 1; j++) {
                loc = loc + row.get(j);
                map.put(loc, map.getOrDefault(loc, 0) + 1);
                max = Math.max(max, map.get(loc));
            }
        }
        return wall.size() - max;
    }
}

//要少穿砖头 即要多穿edge  所以对每一行 都挨个统计edge的位置和数量 注意不能加上最后一个
//然后因为只需要得到最大频率 所以不需要桶排序 而是记录max  max即为edge最多的数量
//最后直接size - edges就可以了
