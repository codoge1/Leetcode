/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        TreeLinkNode levelStart = root, pre = new TreeLinkNode(0);
        while (levelStart != null) {
            TreeLinkNode cur = levelStart;
            pre = new TreeLinkNode(0);
            TreeLinkNode fake = pre;
            while (cur != null) {
                if (cur.left != null) {
                    pre.next = cur.left;
                    pre = pre.next;
                }
                if (cur.right != null) {
                    pre.next = cur.right;
                    pre = pre.next;
                }
                cur = cur.next;
            }
            levelStart = fake.next;
        }
    }
}

//和I的区别在于 I是满二叉树 在同一层中 不会出现中间的null值 即出现null 则换层即可 
//第二  每一层的开始 必定为上一层开始的left  而此题 还需要记录每一层的开始
