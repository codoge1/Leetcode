/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode fake = new ListNode(0);
        ListNode pre = fake;
        while (carry != 0 || l1 != null || l2 != null) {
            int a = (l1 == null) ? 0 : l1.val;
            int b = (l2 == null) ? 0 : l2.val;
            int sum = a + b + carry;
            int remain = sum % 10;
            carry = sum / 10;
            ListNode cur = new ListNode(remain);
            pre.next = cur;
            pre = cur;
            l1 = (l1 == null) ? null : l1.next;
            l2 = (l2 == null) ? null : l2.next;
        }
        return fake.next;
    }
}

//倒序表示的数字 刚好符合加法 所以每次得到值 新建node 然后用pre连住 更新pre 进行下一次计算
