class Solution {
    public int nthUglyNumber(int n) {
        int[] ugly = new int[n + 1];
        ugly[1] = 1;
        int index2 = 1, index3 = 1, index5 = 1;
        int group2 = 2, group3 = 3, group5 = 5;
        for (int i = 2; i <= n; i++) {
            int min = Math.min(Math.min(group2, group3), group5);
            ugly[i] = min;
            if (group2 == min) {
                index2++;
                group2 = 2 * ugly[index2];
            }
            if (group3 == min) {
                index3++;
                group3 = 3 * ugly[index3];
            }
            if (group5 == min) {
                index5++;
                group5 = 5 * ugly[index5];
            }
        }
        return ugly[n];
    }
}

//分为235 三个组 每组因子 235 分别乘以ugly数组的数 得到另一个ugly
//所以 记录每组在ugly中的索引
