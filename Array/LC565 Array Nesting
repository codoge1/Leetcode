class Solution {
    public int arrayNesting(int[] nums) {
        int max = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] < 0) {
                continue;
            }
            int len = 1, index = nums[i];
            while (index != i) {
                len++;
                nums[index] = - nums[index];
                index = Math.abs(nums[index]);
            }
            max = Math.max(max, len);
        }
        return max;
    }
}

//很巧妙的思路 对每一个数 一直取其值作为索引的数 直到出现循环 然后求最大的循环链
//这个思路比BF快的地方 即是发现了 在一条链子中  只要出现过的数 以他为首的链子长度都相等！
//所以 可以利用这个来跳过很多数  在每条链子中 除了第一个 只要出现过的数 则标记为- 然后遍历中出现负数 则跳过即可
//需要注意的是index记得取绝对值
