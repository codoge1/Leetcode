class Solution {
    public int nthSuperUglyNumber(int n, int[] primes) {
        int[] ugly = new int[n];
        ugly[0] = 1;
        int[] indexs = new int[primes.length];
        int[] groups = new int[primes.length];
        for (int i = 0; i < groups.length; i++) {
            groups[i] = primes[i];
        }
        for (int i = 1;i < n; i++) {
            ugly[i] = groups[0];
            for (int num : groups) {
                if (num < ugly[i]) {
                    ugly[i] = num;
                }
            }
            for (int j = 0; j < groups.length; j++) {
                if (ugly[i] == groups[j]) {
                    indexs[j]++;
                    groups[j] = primes[j] * ugly[indexs[j]];
                }
            }
        }
        return ugly[n - 1];
    }
}

//和ugly num 2 没区别 只是这里的primes是个数组 所以对里面每个prime都设置单独的数组 index 和group即可
//同样的找最小值 然后判断最小值是哪个组的  这里需要注意不能break 因为一个最小值可能为多个组共有的
//然后更新即可
